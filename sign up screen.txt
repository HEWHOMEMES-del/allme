screens/SignupScreen.tsx
tsx
Copy
Edit
import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';
import { NativeStackScreenProps } from '@react-navigation/native-stack';
import { RootStackParamList } from '../navigation';

type Props = NativeStackScreenProps<RootStackParamList, 'Signup'>;

export default function SignupScreen({ navigation }: Props) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [role, setRole] = useState<'student' | 'parent' | 'teacher'>('student');

  const handleSignup = () => {
    if (!email || !password || !confirmPassword) {
      Alert.alert('Error', 'Please fill all fields');
      return;
    }
    if (password !== confirmPassword) {
      Alert.alert('Error', 'Passwords do not match');
      return;
    }

    // TODO: Replace with real signup logic (Firebase, custom backend, etc.)
    Alert.alert('Success', `Account created for ${role}`);
    navigation.navigate('Login');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Sign Up</Text>

      <View style={styles.roleSelector}>
        {['student', 'parent', 'teacher'].map(r => (
          <TouchableOpacity
            key={r}
            onPress={() => setRole(r as any)}
            style={[styles.roleButton, role === r && styles.roleButtonSelected]}
          >
            <Text style={[styles.roleText, role === r && styles.roleTextSelected]}>
              {r.charAt(0).toUpperCase() + r.slice(1)}
            </Text>
          </TouchableOpacity>
        ))}
      </View>

      <TextInput
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
        keyboardType="email-address"
        autoCapitalize="none"
        style={styles.input}
      />
      <TextInput
        placeholder="Password"
        value={password}
        onChangeText={setPassword}
        secureTextEntry
        style={styles.input}
      />
      <TextInput
        placeholder="Confirm Password"
        value={confirmPassword}
        onChangeText={setConfirmPassword}
        secureTextEntry
        style={styles.input}
      />

      <TouchableOpacity style={styles.button} onPress={handleSignup}>
        <Text style={styles.buttonText}>Create Account</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.loginLink} onPress={() => navigation.navigate('Login')}>
        <Text>Already have an account? Login</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex:1, padding: 20, backgroundColor: '#eef2ff', justifyContent:'center' },
  title: { fontSize: 30, fontWeight: 'bold', textAlign:'center', marginBottom: 20, color:'#3f3fff' },
  input: { backgroundColor: 'white', padding: 12, borderRadius: 8, marginVertical: 8 },
  button: { backgroundColor: '#3f3fff', padding: 15, borderRadius: 8, marginTop: 10 },
  buttonText: { color: 'white', fontWeight: '600', textAlign: 'center' },
  loginLink: { marginTop: 20, alignItems: 'center' },
  roleSelector: { flexDirection: 'row', justifyContent: 'space-around', marginBottom: 15 },
  roleButton: { paddingVertical: 8, paddingHorizontal: 15, borderRadius: 20, backgroundColor: '#ccc' },
  roleButtonSelected: { backgroundColor: '#3f3fff' },
  roleText: { color: '#444', fontWeight: '500' },
  roleTextSelected: { color: 'white', fontWeight: '700' },
});