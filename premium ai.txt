Step 1: Install React Navigation dependencies (if not done yet)
bash
Copy
Edit
npm install @react-navigation/native @react-navigation/native-stack
expo install react-native-screens react-native-safe-area-context
Step 2: Setup navigation structure in App.tsx
tsx
Copy
Edit
import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';

import LoginScreen from './screens/LoginScreen';
import SignupScreen from './screens/SignupScreen';
import StudentDashboard from './screens/StudentDashboard';
import ParentDashboard from './screens/ParentDashboard';
import TeacherDashboard from './screens/TeacherDashboard';
import GuestScreen from './screens/GuestScreen';
import PaymentScreen from './screens/PaymentScreen';
import AIChatScreen from './screens/AIChatScreen';
import LessonsScreen from './screens/LessonsScreen';

export type RootStackParamList = {
  Login: undefined;
  Signup: undefined;
  StudentDashboard: undefined;
  ParentDashboard: undefined;
  TeacherDashboard: undefined;
  Guest: undefined;
  Payment: { onSuccess: () => void };
  AIChat: undefined;
  Lessons: undefined;
};

const Stack = createNativeStackNavigator<RootStackParamList>();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Login" screenOptions={{ headerShown: true }}>
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Signup" component={SignupScreen} />
        <Stack.Screen name="StudentDashboard" component={StudentDashboard} />
        <Stack.Screen name="ParentDashboard" component={ParentDashboard} />
        <Stack.Screen name="TeacherDashboard" component={TeacherDashboard} />
        <Stack.Screen name="Guest" component={GuestScreen} />
        <Stack.Screen 
          name="Payment" 
          component={PaymentScreen} 
          options={{ title: 'Subscribe to Premium' }}
          initialParams={{ onSuccess: () => {} }}
        />
        <Stack.Screen name="AIChat" component={AIChatScreen} options={{ title: 'Study Assistant' }} />
        <Stack.Screen name="Lessons" component={LessonsScreen} options={{ title: 'Lessons' }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}
Step 3: Navigating between screens
From dashboards or other screens, you can navigate like this:

tsx
Copy
Edit
// Example: navigate to AI Chat Screen
navigation.navigate('AIChat');

// Example: navigate to Payment Screen and pass onSuccess callback
navigation.navigate('Payment', {
  onSuccess: () => {
    // e.g. refresh user status, unlock premium UI
  }
});
Step 4: Connecting payment success to premium unlock
In PaymentScreen, after successful payment:

tsx
Copy
Edit
props.route.params.onSuccess(); // Call the callback passed by navigation
Step 5: From your dashboards, add buttons to navigate to Lessons, Payment, AI Chat
Example for StudentDashboard:

tsx
Copy
Edit
<TouchableOpacity
  style={styles.card}
  onPress={() => navigation.navigate('Lessons')}
>
  <Text style={styles.cardTitle}>ðŸ“š Lessons & Past Papers</Text>
</TouchableOpacity>

<TouchableOpacity
  style={styles.card}
  onPress={() => navigation.navigate('AIChat')}
>
  <Text style={styles.cardTitle}>ðŸ¤– AI Study Assistant</Text>
</TouchableOpacity>

<TouchableOpacity
  style={styles.card}
  onPress={() => navigation.navigate('Payment', {
    onSuccess: () => {
      // reload user premium status or show success message
    }
  })}
>
  <Text style={styles.cardTitle}>ðŸ’³ Upgrade to Premium</Text>
</TouchableOpacity>
Step 6: Control access to premium content on Lessons and AI Chat screens
Use the premiumService from earlier to check access and show trial or payment options if needed.

